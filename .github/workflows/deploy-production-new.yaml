name: Deploy Frontend to Production (Blue-Green)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: yarn install

    - name: Identify Active Frontend
      id: check-active
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NEW_SERVER_HOST }}
        username: ${{ secrets.NEW_SERVER_USER }}
        key: ${{ secrets.NEW_SERVER_KEY }}
        script: |
          active=$(docker ps --format "{{.Names}}" | grep -E "whoami-frontend-(blue|green)" || true)
          if [[ "$active" == "whoami-frontend-blue" ]]; then
            echo "✅ 현재 실행 중인 컨테이너: BLUE"
            echo "🔄 GREEN으로 전환"
            echo "TARGET=green" >> $GITHUB_ENV
          else
            echo "✅ 현재 실행 중인 컨테이너: GREEN"
            echo "🔄 BLUE으로 전환"
            echo "TARGET=blue" >> $GITHUB_ENV
          fi

    - name: Deploy New Frontend Version
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NEW_SERVER_HOST }}
        username: ${{ secrets.NEW_SERVER_USER }}
        key: ${{ secrets.NEW_SERVER_KEY }}
        script: |
          echo "🚀 새로운 프론트엔드 배포: whoami-frontend-${TARGET}"

          docker compose -f docker-compose.production.yml up --build -d whoami-frontend-${TARGET}

          echo "✅ 배포 완료: ${TARGET} 컨테이너 실행 중!"

    - name: Cleanup Old Containers
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NEW_SERVER_HOST }}
        username: ${{ secrets.NEW_SERVER_USER }}
        key: ${{ secrets.NEW_SERVER_KEY }}
        script: |
          echo "🗑 이전 프론트엔드 컨테이너 정리"

          if [[ "$TARGET" == "blue" ]]; then
            docker rm -f whoami-frontend-green || true
          else
            docker rm -f whoami-frontend-blue || true
          fi

          echo "✅ 이전 컨테이너 삭제 완료!"